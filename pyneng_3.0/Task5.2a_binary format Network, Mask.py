"""
Запросить у пользователя ввод IP-сети в формате: 10.1.1.0/24
Затем вывести информацию о сети и маске в таком формате:

Network:
10 1 1 0
00001010 00000001 00000001 00000000

Mask:
/24
255 255 255 0
11111111 11111111 11111111 00000000

Проверить работу скрипта на разных комбинациях сеть/маска.
Ограничение: Все задания надо выполнять используя только пройденные темы.

Дополнение:
Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети, надо преоб-
разовать адрес хоста в адрес сети и вывести адрес сети и маску, как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):
• 10.0.1.0/24
• 190.1.0.0/16
Пример адреса хоста:
• 10.0.1.1/24 - хост из сети 10.0.1.0/24
• 10.0.5.1/30 - хост из сети 10.0.5.0/30
Если пользователь ввел адрес 10.0.1.1/24, вывод должен быть таким:
Network:
10 0 1 0
00001010 00000000 00000001 00000000
255 255 255 0
11111111 11111111 11111111 00000000
"""

#Решение:
network = input("Enter your network:\n")
network = network.split("/")

subnet = network[0]
mask = network[1]

dictmask = {"0":"0.0.0.0", "1":"128.0.0.0", "2":"192.0.0.0", "3":"224.0.0.0", "4":"240.0.0.0", "5":"248.0.0.0", "6":"252.0.0.0", "7":"254.0.0.0", "8":"255.0.0.0", "9":"255.128.0.0", "10":"255.192.0.0", "11":"255.224.0.0", "12":"255.240.0.0", "13":"255.248.0.0", "14":"255.252.0.0", "15":"255.254.0.0", "16":"255.255.0.0", "17":"255.255.128.0", "18":"255.255.192.0", "19":"255.255.224.0", "20":"255.255.240.0", "21":"255.255.248.0", "22":"255.255.252.0", "23":"255.255.254.0", "24":"255.255.255.0", "25":"255.255.255.128", "26":"255.255.255.192", "27":"255.255.255.224", "28":"255.255.255.240", "29":"255.255.255.248", "30":"255.255.255.252", "31":"255.255.255.254", "32":"255.255.255.255"}
octets_mask = dictmask[mask]

octet1_mask, octet2_mask, octet3_mask, octet4_mask = octets_mask.split(".")
octet1_mask = int(octet1_mask)
octet2_mask = int(octet2_mask)
octet3_mask = int(octet3_mask)
octet4_mask = int(octet4_mask)

octet1_ip, octet2_ip, octet3_ip, octet4_ip = subnet.split(".")
octet1_ip_bin = int(octet1_ip)
octet2_ip_bin = int(octet2_ip)*octet2_mask
octet3_ip_bin = int(octet3_ip)*octet3_mask
octet4_ip_bin = int(octet4_ip)*octet4_mask

ip_template = """
Network:
{0:<} {1:<} {2:<} {3:<}
{0:08b} {1:08b} {2:08b} {3:08b}
""".format(octet1_ip, octet2_ip, octet3_ip, octet4_ip,        )


mask = "/" + mask
mask_template = """
Mask:
{0}
{1:<} {2:<} {3:<} {4:<}
{1:08b} {2:08b} {3:08b} {4:08b}
""".format(mask, octet1_mask, octet2_mask, octet3_mask, octet4_mask)

print(ip_template)
print(mask_template)


